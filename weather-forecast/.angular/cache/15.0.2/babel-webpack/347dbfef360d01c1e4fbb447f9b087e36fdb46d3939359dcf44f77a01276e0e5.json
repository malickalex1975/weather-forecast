{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { LANG, THEME } from 'src/app/constants';\nlet HeaderComponent = class HeaderComponent {\n  constructor(langService, storage, themeService, colorService) {\n    this.langService = langService;\n    this.storage = storage;\n    this.themeService = themeService;\n    this.colorService = colorService;\n    this.currentLang$$ = this.langService.getLang();\n    this.currentTheme$$ = this.themeService.getTheme();\n    this.tempColor$$ = this.colorService.emitColor();\n  }\n  langToggle() {\n    let newLang = this.storage.getItem(LANG) === 'ru' ? 'en' : 'ru';\n    this.langService.setLang(newLang);\n  }\n  themeToggle() {\n    let newTheme = this.storage.getItem(THEME) === 'light' ? 'dark' : 'light';\n    this.themeService.setTheme(newTheme);\n  }\n  getStyle(theme) {\n    return theme === 'light' ? 'background-color: yellow' : 'background-color: black';\n  }\n  getHeaderColor() {}\n};\nHeaderComponent = __decorate([Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})], HeaderComponent);\nexport { HeaderComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAASC,IAAI,EAAEC,KAAK,QAAQ,mBAAmB;AAUxC,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAI1BC,YACUC,WAA4B,EAC5BC,OAAuB,EACvBC,YAA0B,EAC1BC,YAAY;IAHZ,gBAAW,GAAXH,WAAW;IACX,YAAO,GAAPC,OAAO;IACP,iBAAY,GAAZC,YAAY;IACZ,iBAAY,GAAZC,YAAY;IAPtB,kBAAa,GAAG,IAAI,CAACH,WAAW,CAACI,OAAO,EAAE;IAC1C,mBAAc,GAAG,IAAI,CAACF,YAAY,CAACG,QAAQ,EAAE;IAC7C,gBAAW,GAAG,IAAI,CAACF,YAAY,CAACG,SAAS,EAAE;EAMxC;EAEHC,UAAU;IACR,IAAIC,OAAO,GAAG,IAAI,CAACP,OAAO,CAACQ,OAAO,CAACb,IAAI,CAAC,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI;IAC/D,IAAI,CAACI,WAAW,CAACU,OAAO,CAACF,OAAO,CAAC;EACnC;EACAG,WAAW;IACT,IAAIC,QAAQ,GAAG,IAAI,CAACX,OAAO,CAACQ,OAAO,CAACZ,KAAK,CAAC,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACzE,IAAI,CAACK,YAAY,CAACW,QAAQ,CAACD,QAAQ,CAAC;EACtC;EACAE,QAAQ,CAACC,KAAoB;IAC3B,OAAOA,KAAK,KAAK,OAAO,GACpB,0BAA0B,GAC1B,yBAAyB;EAC/B;EACAC,cAAc,IAAG;CAClB;AAzBYlB,eAAe,eAL3BH,SAAS,CAAC;EACTsB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,GACWrB,eAAe,CAyB3B;SAzBYA,eAAe","names":["Component","LANG","THEME","HeaderComponent","constructor","langService","storage","themeService","colorService","getLang","getTheme","emitColor","langToggle","newLang","getItem","setLang","themeToggle","newTheme","setTheme","getStyle","theme","getHeaderColor","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\malic\\source\\repos\\weather\\weather-forecast\\weather-forecast\\src\\app\\core\\components\\header\\header.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { switchMap, tap } from 'rxjs';\r\nimport { LANG, THEME } from 'src/app/constants';\r\nimport { LanguageService } from '../../services/language.service';\r\nimport { StorageService } from '../../services/storage.service';\r\nimport { ThemeService } from '../../services/theme.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n})\r\nexport class HeaderComponent {\r\n  currentLang$$ = this.langService.getLang();\r\n  currentTheme$$ = this.themeService.getTheme();\r\n  tempColor$$ = this.colorService.emitColor();\r\n  constructor(\r\n    private langService: LanguageService,\r\n    private storage: StorageService,\r\n    private themeService: ThemeService,\r\n    private colorService\r\n  ) {}\r\n\r\n  langToggle() {\r\n    let newLang = this.storage.getItem(LANG) === 'ru' ? 'en' : 'ru';\r\n    this.langService.setLang(newLang);\r\n  }\r\n  themeToggle() {\r\n    let newTheme = this.storage.getItem(THEME) === 'light' ? 'dark' : 'light';\r\n    this.themeService.setTheme(newTheme);\r\n  }\r\n  getStyle(theme: string | null) {\r\n    return theme === 'light'\r\n      ? 'background-color: yellow'\r\n      : 'background-color: black';\r\n  }\r\n  getHeaderColor(){}\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}