{"ast":null,"code":"import { map, switchMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class GetCurrentPlaceService {\n  constructor(http) {\n    this.http = http;\n  }\n  getIP() {\n    return this.http.get('https://jsonip.com');\n  }\n  getPlace() {\n    return this.getIP().pipe(map(data => data.ip), switchMap(ip => this.http.get(`http://ipwho.is/${ip}`)));\n  }\n  static #_ = this.ɵfac = function GetCurrentPlaceService_Factory(t) {\n    return new (t || GetCurrentPlaceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GetCurrentPlaceService,\n    factory: GetCurrentPlaceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,GAAG,EAAEC,SAAS,QAAQ,MAAM;;;AAKrC,OAAM,MAAOC,sBAAsB;EACjCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EACvCC,KAAK;IACH,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,oBAAoB,CAAC;EAC5C;EACAC,QAAQ;IACN,OAAO,IAAI,CAACF,KAAK,EAAE,CAACG,IAAI,CACtBR,GAAG,CAAES,IAAS,IAAKA,IAAI,CAACC,EAAE,CAAC,EAC3BT,SAAS,CAAES,EAAE,IACX,IAAI,CAACN,IAAI,CAACE,GAAG,CAAC,mBAAmBI,EAAE,EAAE,CAAC,CACvC,CACF;EACH;EAAC;qBAZUR,sBAAsB;EAAA;EAAA;WAAtBA,sBAAsB;IAAAS,SAAtBT,sBAAsB;IAAAU,YAFrB;EAAM","names":["map","switchMap","GetCurrentPlaceService","constructor","http","getIP","get","getPlace","pipe","data","ip","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\malic\\source\\repos\\weather\\weather-forecast\\weather-forecast\\src\\app\\core\\services\\get-current-place.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, switchMap } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class GetCurrentPlaceService {\r\n  constructor(private http: HttpClient) {}\r\n  getIP() {\r\n    return this.http.get('https://jsonip.com');\r\n  }\r\n  getPlace() {\r\n    return this.getIP().pipe(\r\n      map((data: any) => data.ip),\r\n      switchMap((ip) =>\r\n        this.http.get(`http://ipwho.is/${ip}`)\r\n      )\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}