{"ast":null,"code":"import { LANG, THEME } from 'src/app/constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/language.service\";\nimport * as i2 from \"../../services/storage.service\";\nimport * as i3 from \"../../services/theme.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../../shared/pipes/translate.pipe\";\nexport class HeaderComponent {\n  constructor(langService, storage, themeService) {\n    this.langService = langService;\n    this.storage = storage;\n    this.themeService = themeService;\n    this.currentLang$$ = this.langService.getLang();\n    this.currentTheme$$ = this.themeService.getTheme();\n  }\n  langToggle() {\n    let newLang = this.storage.getItem(LANG) === 'ru' ? 'en' : 'ru';\n    this.langService.setLang(newLang);\n  }\n  themeToggle() {\n    let newTheme = this.storage.getItem(THEME) === 'light' ? 'dark' : 'light';\n    this.themeService.setTheme(newTheme);\n  }\n  getStyle(theme) {\n    return theme === 'light' ? 'background-color: yellow' : 'background-color: black';\n  }\n  static #_ = this.ɵfac = function HeaderComponent_Factory(t) {\n    return new (t || HeaderComponent)(i0.ɵɵdirectiveInject(i1.LanguageService), i0.ɵɵdirectiveInject(i2.StorageService), i0.ɵɵdirectiveInject(i3.ThemeService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HeaderComponent,\n    selectors: [[\"app-header\"]],\n    decls: 10,\n    vars: 12,\n    consts: [[1, \"header-container\"], [1, \"lang\", 3, \"click\"], [1, \"theme\", 3, \"click\"]],\n    template: function HeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function HeaderComponent_Template_button_click_1_listener() {\n          return ctx.langToggle();\n        });\n        i0.ɵɵtext(2);\n        i0.ɵɵpipe(3, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function HeaderComponent_Template_button_click_4_listener() {\n          return ctx.themeToggle();\n        });\n        i0.ɵɵpipe(5, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"p\");\n        i0.ɵɵtext(7);\n        i0.ɵɵpipe(8, \"async\");\n        i0.ɵɵpipe(9, \"translate\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        let tmp_0_0;\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate((tmp_0_0 = i0.ɵɵpipeBind1(3, 4, ctx.currentLang$$)) == null ? null : tmp_0_0.toUpperCase());\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleMap(ctx.getStyle(i0.ɵɵpipeBind1(5, 6, ctx.currentTheme$$)));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 8, i0.ɵɵpipeBind1(9, 10, \"hello\")));\n      }\n    },\n    dependencies: [i4.AsyncPipe, i5.TranslatePipe],\n    styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 373:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\\\\nSassError: expected \\\\\\\"{\\\\\\\".\\\\n   \\u2577\\\\n41 \\u2502         opa\\\\r\\\\n   \\u2502            ^\\\\n   \\u2575\\\\n  src\\\\\\\\app\\\\\\\\core\\\\\\\\components\\\\\\\\header\\\\\\\\header.component.scss 41:12  root stylesheet\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[373]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\"]\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,IAAI,EAAEC,KAAK,QAAQ,mBAAmB;;;;;;;AAU/C,OAAM,MAAOC,eAAe;EAG1BC,YACUC,WAA4B,EAC5BC,OAAuB,EACvBC,YAA0B;IAF1B,gBAAW,GAAXF,WAAW;IACX,YAAO,GAAPC,OAAO;IACP,iBAAY,GAAZC,YAAY;IALtB,kBAAa,GAAG,IAAI,CAACF,WAAW,CAACG,OAAO,EAAE;IAC1C,mBAAc,GAAG,IAAI,CAACD,YAAY,CAACE,QAAQ,EAAE;EAK1C;EAEHC,UAAU;IACR,IAAIC,OAAO,GAAG,IAAI,CAACL,OAAO,CAACM,OAAO,CAACX,IAAI,CAAC,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI;IAC/D,IAAI,CAACI,WAAW,CAACQ,OAAO,CAACF,OAAO,CAAC;EACnC;EACAG,WAAW;IACT,IAAIC,QAAQ,GAAG,IAAI,CAACT,OAAO,CAACM,OAAO,CAACV,KAAK,CAAC,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACzE,IAAI,CAACK,YAAY,CAACS,QAAQ,CAACD,QAAQ,CAAC;EACtC;EACAE,QAAQ,CAACC,KAAoB;IAC3B,OAAOA,KAAK,KAAK,OAAO,GACpB,0BAA0B,GAC1B,yBAAyB;EAC/B;EAAC;qBArBUf,eAAe;EAAA;EAAA;UAAfA,eAAe;IAAAgB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCZ5BC,8BAA8B;QACTA;UAAA,OAASC,gBAAY;QAAA,EAAC;QAACD,YAA4C;;QAAAA,iBAAS;QACjGA,iCAAuF;QAAjEA;UAAA,OAASC,iBAAa;QAAA,EAAC;;QAA0CD,iBAAS;QAChGA,yBAAG;QAAAA,YAAiC;;;QAAAA,iBAAI;;;;QAFIA,eAA4C;QAA5CA,gHAA4C;QAC1CA,eAAwC;QAAxCA,qEAAwC;QACnFA,eAAiC;QAAjCA,0EAAiC","names":["LANG","THEME","HeaderComponent","constructor","langService","storage","themeService","getLang","getTheme","langToggle","newLang","getItem","setLang","themeToggle","newTheme","setTheme","getStyle","theme","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\malic\\source\\repos\\weather\\weather-forecast\\weather-forecast\\src\\app\\core\\components\\header\\header.component.ts","C:\\Users\\malic\\source\\repos\\weather\\weather-forecast\\weather-forecast\\src\\app\\core\\components\\header\\header.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { switchMap, tap } from 'rxjs';\r\nimport { LANG, THEME } from 'src/app/constants';\r\nimport { LanguageService } from '../../services/language.service';\r\nimport { StorageService } from '../../services/storage.service';\r\nimport { ThemeService } from '../../services/theme.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n})\r\nexport class HeaderComponent {\r\n  currentLang$$ = this.langService.getLang();\r\n  currentTheme$$ = this.themeService.getTheme();\r\n  constructor(\r\n    private langService: LanguageService,\r\n    private storage: StorageService,\r\n    private themeService: ThemeService\r\n  ) {}\r\n\r\n  langToggle() {\r\n    let newLang = this.storage.getItem(LANG) === 'ru' ? 'en' : 'ru';\r\n    this.langService.setLang(newLang);\r\n  }\r\n  themeToggle() {\r\n    let newTheme = this.storage.getItem(THEME) === 'light' ? 'dark' : 'light';\r\n    this.themeService.setTheme(newTheme);\r\n  }\r\n  getStyle(theme: string | null) {\r\n    return theme === 'light'\r\n      ? 'background-color: yellow'\r\n      : 'background-color: black';\r\n  }\r\n}\r\n","<div class=\"header-container\">\r\n<button class=\"lang\" (click)=\"langToggle()\">{{ (currentLang$$ | async)?.toUpperCase() }}</button>\r\n<button class=\"theme\" (click)=\"themeToggle()\" [style]=\"getStyle(currentTheme$$|async)\"></button>\r\n<p>{{ \"hello\" | translate | async }}</p>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}