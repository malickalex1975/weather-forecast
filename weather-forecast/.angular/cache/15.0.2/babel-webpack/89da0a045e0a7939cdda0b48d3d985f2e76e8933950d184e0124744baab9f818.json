{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class RequestService {\n  constructor() {\n    this.request$$ = new BehaviorSubject('');\n    this.coords$$ = new BehaviorSubject([undefined, undefined]);\n  }\n  getRequest() {\n    return this.request$$;\n  }\n  getCoords() {\n    return this.coords$$;\n  }\n  setRequest(req) {\n    let r = req.trim();\n    if (r.length > 3) {\n      this.request$$.next(r);\n    } else {\n      this.request$$.next('');\n    }\n  }\n  setCoords(lat, lon) {\n    this.coords$$.next([lat, lon]);\n  }\n  static #_ = this.ɵfac = function RequestService_Factory(t) {\n    return new (t || RequestService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RequestService,\n    factory: RequestService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,cAAc;EAMzBC;IALA,cAAS,GAAG,IAAIF,eAAe,CAAC,EAAE,CAAC;IACnC,aAAQ,GAAG,IAAIA,eAAe,CAA2C,CACvEG,SAAS,EACTA,SAAS,CACV,CAAC;EACa;EAEfC,UAAU;IACR,OAAO,IAAI,CAACC,SAAS;EACvB;EACAC,SAAS;IACP,OAAO,IAAI,CAACC,QAAQ;EACtB;EACAC,UAAU,CAACC,GAAW;IACpB,IAAIC,CAAC,GAAGD,GAAG,CAACE,IAAI,EAAE;IAClB,IAAID,CAAC,CAACE,MAAM,GAAG,CAAC,EAAE;MAChB,IAAI,CAACP,SAAS,CAACQ,IAAI,CAACH,CAAC,CAAC;KACvB,MAAM;MACL,IAAI,CAACL,SAAS,CAACQ,IAAI,CAAC,EAAE,CAAC;;EAE3B;EACAC,SAAS,CAACC,GAAY,EAAEC,GAAY;IAClC,IAAI,CAACT,QAAQ,CAACM,IAAI,CAAC,CAACE,GAAG,EAAEC,GAAG,CAAC,CAAC;EAChC;EAAC;qBAxBUf,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAgB,SAAdhB,cAAc;IAAAiB,YAFb;EAAM","names":["BehaviorSubject","RequestService","constructor","undefined","getRequest","request$$","getCoords","coords$$","setRequest","req","r","trim","length","next","setCoords","lat","lon","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\malic\\source\\repos\\weather\\weather-forecast\\weather-forecast\\src\\app\\core\\services\\request.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RequestService {\r\n  request$$ = new BehaviorSubject('');\r\n  coords$$ = new BehaviorSubject<[number | undefined, number | undefined]>([\r\n    undefined,\r\n    undefined,\r\n  ]);\r\n  constructor() {}\r\n\r\n  getRequest() {\r\n    return this.request$$;\r\n  }\r\n  getCoords() {\r\n    return this.coords$$;\r\n  }\r\n  setRequest(req: string) {\r\n    let r = req.trim();\r\n    if (r.length > 3) {\r\n      this.request$$.next(r);\r\n    } else {\r\n      this.request$$.next('');\r\n    }\r\n  }\r\n  setCoords(lat?: number, lon?: number) {\r\n    this.coords$$.next([lat, lon]);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}