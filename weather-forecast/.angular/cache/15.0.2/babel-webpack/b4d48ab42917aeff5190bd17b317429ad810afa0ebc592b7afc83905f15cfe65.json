{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { THEME } from 'src/app/constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./storage.service\";\nexport class ThemeService {\n  constructor(storage) {\n    this.storage = storage;\n    this.theme = new BehaviorSubject(\"light\");\n    this.theme.next(this.storage.getItem(THEME) || 'light');\n  }\n  getTheme() {\n    return this.theme;\n  }\n  setTheme(t) {\n    this.theme.next(t);\n    this.storage.setItem(THEME, t);\n  }\n  static #_ = this.ɵfac = function ThemeService_Factory(t) {\n    return new (t || ThemeService)(i0.ɵɵinject(i1.StorageService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ThemeService,\n    factory: ThemeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;AACtC,SAAeC,KAAK,QAAQ,mBAAmB;;;AAM/C,OAAM,MAAOC,YAAY;EAEvBC,YAAoBC,OAAsB;IAAtB,YAAO,GAAPA,OAAO;IAD3B,UAAK,GAAE,IAAIJ,eAAe,CAAS,OAAO,CAAC;IAEzC,IAAI,CAACK,KAAK,CAACC,IAAI,CAAC,IAAI,CAACF,OAAO,CAACG,OAAO,CAACN,KAAK,CAAC,IAAE,OAAO,CAAC;EACvD;EACAO,QAAQ;IACN,OAAO,IAAI,CAACH,KAAK;EACnB;EACAI,QAAQ,CAACC,CAAQ;IACf,IAAI,CAACL,KAAK,CAACC,IAAI,CAACI,CAAC,CAAC;IAClB,IAAI,CAACN,OAAO,CAACO,OAAO,CAACV,KAAK,EAACS,CAAC,CAAC;EAC/B;EAAC;qBAXUR,YAAY;EAAA;EAAA;WAAZA,YAAY;IAAAU,SAAZV,YAAY;IAAAW,YAFX;EAAM","names":["BehaviorSubject","THEME","ThemeService","constructor","storage","theme","next","getItem","getTheme","setTheme","t","setItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\malic\\source\\repos\\weather\\weather-forecast\\weather-forecast\\src\\app\\core\\services\\theme.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { LANG, THEME } from 'src/app/constants';\r\nimport { StorageService } from './storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ThemeService {\r\n  theme= new BehaviorSubject<string>(\"light\")\r\n  constructor(private storage:StorageService) { \r\n    this.theme.next(this.storage.getItem(THEME)||'light')\r\n  }\r\n  getTheme(){\r\n    return this.theme\r\n  }\r\n  setTheme(t:string){\r\n    this.theme.next(t);\r\n    this.storage.setItem(THEME,t)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}