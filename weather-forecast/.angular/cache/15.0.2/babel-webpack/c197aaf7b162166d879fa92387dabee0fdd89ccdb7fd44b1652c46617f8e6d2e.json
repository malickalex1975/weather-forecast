{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { LAST_PLACES } from 'src/app/constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./storage.service\";\nexport class RememberPlacesService {\n  constructor(storage) {\n    this.storage = storage;\n    this.placesArray$$ = new BehaviorSubject([]);\n  }\n  remember(place) {\n    let arr = this.getLastPlaces();\n    if (!arr.some(i => i.name === place.name && i.country === place.country && i.state === place.state)) {\n      arr.push(place);\n      this.storage.setItem(LAST_PLACES, JSON.stringify(arr));\n      this.emitPlaces();\n    }\n  }\n  getLastPlaces() {\n    return JSON.parse(this.storage.getItem(LAST_PLACES) || '[]');\n  }\n  emitPlaces() {\n    this.placesArray$$.next(this.getLastPlaces());\n  }\n  getSubject() {\n    this.emitPlaces();\n    return this.placesArray$$;\n  }\n  clearPlaces() {\n    this.storage.setItem(LAST_PLACES, JSON.stringify([]));\n    this.emitPlaces();\n  }\n  delete(place) {\n    let arr = this.getLastPlaces();\n  }\n  static #_ = this.ɵfac = function RememberPlacesService_Factory(t) {\n    return new (t || RememberPlacesService)(i0.ɵɵinject(i1.StorageService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RememberPlacesService,\n    factory: RememberPlacesService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;AACtC,SAAiBC,WAAW,QAAQ,mBAAmB;;;AAMvD,OAAM,MAAOC,qBAAqB;EAGhCC,YAAoBC,OAAuB;IAAvB,YAAO,GAAPA,OAAO;IAF3B,kBAAa,GAAG,IAAIJ,eAAe,CAAW,EAAE,CAAC;EAEH;EAE9CK,QAAQ,CAACC,KAAa;IACpB,IAAIC,GAAG,GAAG,IAAI,CAACC,aAAa,EAAE;IAC9B,IACE,CAACD,GAAG,CAACE,IAAI,CACNC,CAAS,IACRA,CAAC,CAACC,IAAI,KAAKL,KAAK,CAACK,IAAI,IACrBD,CAAC,CAACE,OAAO,KAAKN,KAAK,CAACM,OAAO,IAC3BF,CAAC,CAACG,KAAK,KAAKP,KAAK,CAACO,KAAK,CAC1B,EACD;MACAN,GAAG,CAACO,IAAI,CAACR,KAAK,CAAC;MACf,IAAI,CAACF,OAAO,CAACW,OAAO,CAACd,WAAW,EAAEe,IAAI,CAACC,SAAS,CAACV,GAAG,CAAC,CAAC;MACtD,IAAI,CAACW,UAAU,EAAE;;EAErB;EACAV,aAAa;IACX,OAAOQ,IAAI,CAACG,KAAK,CAAC,IAAI,CAACf,OAAO,CAACgB,OAAO,CAACnB,WAAW,CAAC,IAAI,IAAI,CAAC;EAC9D;EACAiB,UAAU;IACR,IAAI,CAACG,aAAa,CAACC,IAAI,CAAC,IAAI,CAACd,aAAa,EAAE,CAAC;EAC/C;EACAe,UAAU;IACR,IAAI,CAACL,UAAU,EAAE;IACjB,OAAO,IAAI,CAACG,aAAa;EAC3B;EACAG,WAAW;IACT,IAAI,CAACpB,OAAO,CAACW,OAAO,CAACd,WAAW,EAAEe,IAAI,CAACC,SAAS,CAAC,EAAE,CAAC,CAAC;IACrD,IAAI,CAACC,UAAU,EAAE;EACnB;EACAO,MAAM,CAACnB,KAAY;IACjB,IAAIC,GAAG,GAAG,IAAI,CAACC,aAAa,EAAE;EAEhC;EAAC;qBArCUN,qBAAqB;EAAA;EAAA;WAArBA,qBAAqB;IAAAwB,SAArBxB,qBAAqB;IAAAyB,YAFpB;EAAM","names":["BehaviorSubject","LAST_PLACES","RememberPlacesService","constructor","storage","remember","place","arr","getLastPlaces","some","i","name","country","state","push","setItem","JSON","stringify","emitPlaces","parse","getItem","placesArray$$","next","getSubject","clearPlaces","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\malic\\source\\repos\\weather\\weather-forecast\\weather-forecast\\src\\app\\core\\services\\remember-places.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { IPlace, LAST_PLACES } from 'src/app/constants';\r\nimport { StorageService } from './storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RememberPlacesService {\r\n  placesArray$$ = new BehaviorSubject<IPlace[]>([]);\r\n\r\n  constructor(private storage: StorageService) {}\r\n\r\n  remember(place: IPlace) {\r\n    let arr = this.getLastPlaces();\r\n    if (\r\n      !arr.some(\r\n        (i: IPlace) =>\r\n          i.name === place.name &&\r\n          i.country === place.country &&\r\n          i.state === place.state\r\n      )\r\n    ) {\r\n      arr.push(place);\r\n      this.storage.setItem(LAST_PLACES, JSON.stringify(arr));\r\n      this.emitPlaces();\r\n    }\r\n  }\r\n  getLastPlaces() {\r\n    return JSON.parse(this.storage.getItem(LAST_PLACES) || '[]');\r\n  }\r\n  emitPlaces() {\r\n    this.placesArray$$.next(this.getLastPlaces());\r\n  }\r\n  getSubject() {\r\n    this.emitPlaces();\r\n    return this.placesArray$$;\r\n  }\r\n  clearPlaces() {\r\n    this.storage.setItem(LAST_PLACES, JSON.stringify([]));\r\n    this.emitPlaces();\r\n  }\r\n  delete(place:IPlace){\r\n    let arr = this.getLastPlaces();\r\n    \r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}